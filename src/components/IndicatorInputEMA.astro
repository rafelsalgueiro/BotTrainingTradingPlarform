---
const { label } = Astro.props;
---

<div class="flex-col items-center mb-4" id={label}>
    <label for="indicator-input" class="flex text-l mb-2 font-bold text-gray-900 dark:text-gray-100">{label}</label>
    <div class="input-container-EMA">
        <input type="number" aria-describedby="helper-text-explanation" class="indicator-input-EMA bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 mb-2" placeholder="30"/>
    </div>
    <button id="add-input-EMA" class="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center mt-2">+</button>
</div>

<script>
document.getElementById('add-input-EMA')?.addEventListener('click', () => {
    const inputContainer = document.querySelector('.input-container-EMA');
    const newInput = document.createElement('input');
    newInput.type = 'number';
    newInput.placeholder = '30';
    newInput.className = 'indicator-input-EMA bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 mb-2';
    inputContainer?.appendChild(newInput);
  });
</script>
