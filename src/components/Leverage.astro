<div class="flex flex-col items-center justify-center mb-7">
    <h2 class="text-2xl font-bold pb-2 text-gray-900 dark:text-gray-100 ">Leverage</h2>
    <button id="leverage" data-dropdown-toggle="leverageHover" data-dropdown-trigger="hover" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">Select leverage <svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
        </svg>
    </button>
    
    <div id="leverageHover" class="z-10 hidden bg-white divide-y scrollbar-thin divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 max-h-80 overflow-y-auto">
        <input type="text" id="searchLeverage" class="block w-full px-4 py-2 border-b border-gray-200 focus:outline-none focus:border-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:focus:border-blue-400" placeholder="Search..." />
        <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="leverage">
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:1</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:3</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:5</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:10</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:15</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:25</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:33</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:50</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:100</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:200</p>
            </li>
            <li>
                <p class="flex justify-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">1:500</p>
            </li>
            
        </ul>
    </div>
</div>

<script>
    const searchLeverage = document.getElementById('searchLeverage');
    const listLeverage = document.querySelectorAll('#leverageHover ul li');
    var leverageSelected = document.getElementById('leverage');
    listLeverage.forEach(function(item) {
        item.addEventListener('click', function(event) {
            const text = (event.target as HTMLElement)?.textContent;
            
            if (leverageSelected) {
                leverageSelected.textContent = text;
            }
        });
    });

    if (searchLeverage) {
        searchLeverage.addEventListener('input', function(event) {
            const searchText = (event.target as HTMLInputElement)?.value?.toLowerCase() || '';
            listLeverage.forEach(function(item) {
                const text = item.textContent?.toLowerCase() || '';
                const itemElement = item as HTMLElement;
                if (text.includes(searchText)) {
                    itemElement.style.display = 'block';
                } else {
                    itemElement.style.display = 'none';
                }
            });
        });
    }

</script>